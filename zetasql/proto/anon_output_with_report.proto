//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package zetasql;

option java_package = "com.google.zetasql";
option java_outer_classname = "ZetaSQLAnonOutputWithReport";

// Contains output from a ZetaSQL anonymization function.
message AnonOutputWithReport {
  oneof result {
    AnonOutputValue value = 1;
    AnonOutputValues values = 2;
  }

  optional BoundingReport bounding_report = 3;
}

// When ApproxBounds is called by bounded algorithms, the BoundingReport can
// be used to pass differentially private intermediate results to help users
// understand the accuracy implications of the output.
message BoundingReport {
  // Lower and upper bounds are either the explicit bounds specified in the
  // query, or are the (noisy) implicit bounds that were derived by the
  // ApproxBounds algorithm.
  optional AnonOutputValue lower_bound = 1;
  optional AnonOutputValue upper_bound = 2;
  // `num_inputs` and `num_outside` in the AnonBoundingReport are *noisy*
  // counts, not exact.
  // Noisy number of total inputs to the bounding algorithm.
  optional double num_inputs = 3;
  // Noisy number of inputs lying outside the bounds.
  optional double num_outside = 4;
}

message NoiseConfidenceInterval {
  optional double lower_bound = 1;
  optional double upper_bound = 2;
  // The percentile confidence level. For 95% CI, this value is 0.95.
  optional double confidence_level = 3;
}

message AnonOutputValues {
  repeated AnonOutputValue values = 1;
}

message AnonOutputValue {
  oneof value {
    int64 int_value = 1;
    double float_value = 2;
    string string_value = 3;
  }

  optional NoiseConfidenceInterval noise_confidence_interval = 4;
}
