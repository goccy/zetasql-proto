//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package zetasql.functions;

import "zetasql/public/type.proto";

option java_package = "com.google.zetasql.functions";
option java_outer_classname = "ZetaSQLArrayZipMode";

// Enum that defines the how arrays are "zipped" together when there are
// multiple arrays of different lengths.
// Currently the enum is used by:
// - ARRAY_ZIP function
// - UNNEST operator with at least two arrays inputs
// ARRAY_ZIP_MODE can only be used as specific function call argument, instead
// of standalone expression.
// See (broken link).
message ArrayZipEnums {
  enum ArrayZipMode {
    option (opaque_enum_type_options).sql_opaque_enum_name = "ARRAY_ZIP_MODE";

    // Invalid in ZetaSQL.
    ARRAY_ZIP_MODE_INVALID = 0
        [(opaque_enum_value_options).invalid_enum_value = true];

    // Pad all arrays shorter than the longest one with NULL, so that
    // padded_array_length = GREATEST(ARRAY_LENGTH(array1),
    // ARRAY_LENGTH(array2), ..., ARRAY_LENGTH(arrayN))
    PAD = 1;

    // Truncate all arrays longer than the shortest one before zipping, so that
    // truncated_array_length = LEAST(ARRAY_LENGTH(array1),
    // ARRAY_LENGTH(array2), ..., ARRAY_LENGTH(arrayN))
    TRUNCATE = 2;

    // If the length of any of the ARRAY arguments is different from the others,
    // throw an error.
    STRICT = 3;
  }
}
