//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package zetasql;

// Payload to attach to absl::Status to indicate that the error can be handled
// by an EXCEPTION clause.
//
// TODO: Add additional fields for engine-specific system variables
// that need to go out of scope when the exception handler is complete.
message ScriptException {
  // Engine specific extensions to include things like engine specific error
  // proto, error code etc..
  extensions 10000 to max;  // see (broken link)

  // Message to expose through the "@@error.message" system variable.
  // If not set, the absl::Status message will be used by default.
  optional string message = 1;

  // A frame in the captured stack trace of an exception.
  message StackTraceFrame {
    // Line and column numbers are one-based and relative to the
    // start of the script/procedure body that contains them.
    optional int64 line = 1;
    optional int64 column = 2;

    // Set only when an error is inside of a module; identifies the name
    // of the module which triggered the error.
    optional string filename = 3;

    // Set only when an error is inside of a procedure; identifies the name
    // of the procedure which triggered the error.
    optional string location = 4;
  }

  // Fields for the script executor's internal use only.  Engines should not set
  // this when raising exceptions.
  message Internal {
    // Value to expose through the "@@error.statement_text" system variable.
    // This field is set automatically by the script executor, based on the
    // current statement at the time the exception is thrown.  Engines should
    // not set it.
    optional string statement_text = 1;

    repeated StackTraceFrame stack_trace = 2;
  }

  optional Internal internal = 2;
}
